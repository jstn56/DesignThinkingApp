<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.XamarinForms.Barcode</name>
    </assembly>
    <members>
        <member name="M:Telerik.XamarinForms.Barcode.RadBarcode.OnSymbologyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property of the symbology changes. Suitable for performing necessary updates based on the changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.FontSize">
            <summary>
            Gets or sets the font size of the text dislayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.FontFamily">
            <summary>
            Gets or sets the font family of the text dislayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text dislayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical alignment of the text dislayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.ShowText">
            <summary>
            Gets or sets whether the barcode should display the human readable value of the barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.Symbology1DBase.CodeTextSpacing">
            <summary>
            Gets or sets the spacing around the text.
            </summary>
        </member>
        <member name="T:Telerik.XamarinForms.Barcode.EncodingMode">
            <summary>
            The EncodingMode enumeration determines the type of the acceptable data.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.EncodingMode.Auto">
            <summary>
            Auto mode.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.EncodingMode.Byte">
            <summary>
            Accepts byte data.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.EncodingMode.Text">
            <summary>
            Allows text data.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.EncodingMode.Numeric">
            <summary>
            Allows numeric data.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.PDF417.ECLevel">
            <summary>
            Gets or sets how much data will be available for error correction.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.PDF417.Rows">
            <summary>
            Gets or sets the number of rows fro the generated barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.PDF417.Columns">
            <summary>
            Gets or sets the number of columns fro the generated barcode.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.PDF417.EncodingMode">
            <summary>
            Gets or sets the type of the acceptable data.
            </summary>
        </member>
        <member name="T:Telerik.XamarinForms.Barcode.CodeMode">
            <summary>
            Determines the type of code, such as Numeric, Alphanumeric, Byte or Kanji.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.CodeMode.Byte">
            <summary>
            Byte Mode.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.CodeMode.Numeric">
            <summary>
            Allows Numbers [0-9].
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.CodeMode.Alphanumeric">
            <summary>
            Allows characters or numbers.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.CodeMode.Kanji">
            <summary>
            Kanji Mode.
            </summary>
        </member>
        <member name="T:Telerik.XamarinForms.Barcode.ECIMode">
            <summary>
            Determines the Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_7">
            <summary>
            ECI 9.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_6">
            <summary>
            ECI 8.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_5">
            <summary>
            ECI 7.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_4">
            <summary>
            ECI 6.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_3">
            <summary>
            ECI 5.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_2">
            <summary>
            ECI 4.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_1En">
            <summary>
            ECI 3.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.CP437">
            <summary>
            ECI 2.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_1">
            <summary>
            ECI 1.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_8">
            <summary>
            ECI 10.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_9">
            <summary>
            ECI 11.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_11">
            <summary>
            ECI 13.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_13">
            <summary>
            ECI 15.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO8859_15">
            <summary>
            ECI 17.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.Windows1250">
            <summary>
            ECI 21.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.Windows1251">
            <summary>
            ECI 22.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.Windows1252">
            <summary>
            ECI 23.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.Windows1256">
            <summary>
            ECI 24.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.UTF8">
            <summary>
            UTF-8.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ECIMode.ISO646US">
            <summary>
            ECI 27.
            </summary>
        </member>
        <member name="T:Telerik.XamarinForms.Barcode.ErrorCorrectionLevel">
            <summary>
            Determines how much data is available for error correction.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ErrorCorrectionLevel.L">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ErrorCorrectionLevel.M">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ErrorCorrectionLevel.Q">
            <summary>
            Quartile.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.ErrorCorrectionLevel.H">
            <summary>
            High.
            </summary>
        </member>
        <member name="T:Telerik.XamarinForms.Barcode.FNC1Mode">
            <summary>
            Signifies application of special formatting to the code data.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.FNC1Mode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.FNC1Mode.FirstPosition">
            <summary>
            FNC 1 in first position.
            </summary>
        </member>
        <member name="F:Telerik.XamarinForms.Barcode.FNC1Mode.SecondPosition">
            <summary>
            FNC 1 in second position.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.Version">
            <summary>
            Gets or sets the version of the QR code. The version determines the size of the QR code and the amount of information that can be encoded.
            Accepted values are in the range [1..40]. If you set the version to a number outside this range, version will be calculated automatically.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.CodeMode">
            <summary>
            Gets or sets the type of code that will be used for encoding, such as Numeric, Alphanumeric, Byte or Kanji. 
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.ErrorCorrectionLevel">
            <summary>
            Gets or sets how much data will be available for error correction.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.ECIMode">
            <summary>
            Gets or sets the Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.FNC1Mode">
            <summary>
            Gets or sets application of special formatting to the code data.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.QRCode.ApplicationIndicator">
            <summary>
            Gets or sets the application indentifier to be encoded in the QR code.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.SymbologyBase.AutoChecksum">
            <summary>
            Gets or sets whether the barcode should automatically calculate a checksum.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.SymbologyBase.Module">
            <summary>
            Gets or sets a module by which the barcode can be scaled up.
            </summary>
        </member>
        <member name="P:Telerik.XamarinForms.Barcode.SymbologyBase.SizingMode">
            <summary>
            Gets or sets whether the bars of the barcode should be stretched to fill the space available.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Primitives.RadRect.op_Equality(Telerik.Barcode.Primitives.RadRect,Telerik.Barcode.Primitives.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Barcode.Primitives.RadRect"/> structures are equal.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Primitives.RadRect.op_Inequality(Telerik.Barcode.Primitives.RadRect,Telerik.Barcode.Primitives.RadRect)">
            <summary>
            Determines whether two <see cref="T:Telerik.Barcode.Primitives.RadRect"/> structures are not equal.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Primitives.RadRect.IntersectsWith(Telerik.Barcode.Primitives.RadRect)">
            <summary>
            Determines whether the current rect intersects with the specified one.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Primitives.RadRect.Contains(System.Double,System.Double)">
            <summary>
            Determines if this RadRect instance contains the point that is described by the arguments.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>Returns true if this rectangle contains the point from the arguments and false otherwise.</returns>
        </member>
        <member name="P:Telerik.Barcode.Symbology.Symbology1D.HorizontalTextAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text displayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.Symbology1D.VerticalTextAlignment">
            <summary>
            Gets or sets the vertical alignment of the text displayed in the barcode.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.Symbology1D.ShowText">
            <summary>
            Gets or sets whether the barcode should display the human readable value of the barcode.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.Symbology1D.CodeTextSpacing">
            <summary>
            Gets or sets the spacing around the text.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.DmtxQuadruplet">
            @struct DmtxQuadruplet
            @brief DmtxQuadruplet
        </member>
        <member name="T:Telerik.Barcode.Symbology.Encodation">
            <summary>
            Represents the encodation used to generate the DataMatrix barcode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.Ascii">
            <summary>
            Represents the ASCII encodation. Allowed characters include double digit numerics and all values from the ASCII table.
            </summary>
            <remarks>
            The double digit numerics use 4 bits.
            The ASCII values in the 0-127 range use 8 bits.
            The ASCII values in 128-255 range use 16 bits.
            </remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.C40">
            <summary>
            Represents the C40 encodation. Used primarily for upper-case alphanumerics.
            </summary>
            <remarks>
            The upper-case alphanumeric characters use 5.33 bits.
            The lower-case and special characters use 10.66 bits.
            </remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.Text">
            <summary>
            Represents the Text encodation. Used primarily for lower-case alphanumerics.
            </summary>
            <remarks>
            The lower-case alphanumeric characters use 5.33 bits.
            The upper-case and special characters use 10.66 bits.
            </remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.X12">
            <summary>
            Represents the X12 encodation.
            Uses the characters from ANSI X12 EDI data set.
            </summary>
            <remarks>
            Each character takes 5.33 bits.
            </remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.Edifact">
            <summary>
            Represents the EDIFACT encodation. Used to encode ASCII values in the 32-94 range.
            </summary>
            <remarks>
            Each character takes 6 bits.
            </remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.Base256">
            <summary>
            Represents the Base256 encodation. Used to encode characters in the whole ASCII range.
            </summary>
            <remarks>
            Each character takes 8 bits.</remarks>
        </member>
        <member name="F:Telerik.Barcode.Symbology.Encodation.AsciiGS1">
            <summary>
            Represents the ASCII GS1 encodation. Used to encode FNC1 characters in the ASCII range.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.SymbolSize">
            <summary>
            Represents the symbol size of the generated barcode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.SquareAuto">
            <summary>
            Automatically determined square symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.RectangleAuto">
            <summary>
            Automatically determined rectangular symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square10x10">
            <summary>
            10x10 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square12x12">
            <summary>
            12x12 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square14x14">
            <summary>
            14x14 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square16x16">
            <summary>
            16x16 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square18x18">
            <summary>
            18x18 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square20x20">
            <summary>
            20x20 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square22x22">
            <summary>
            22x22 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square24x24">
            <summary>
            24x24 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square26x26">
            <summary>
            26x26 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square32x32">
            <summary>
            32x32 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square36x36">
            <summary>
            36x36 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square40x40">
            <summary>
            40x40 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square44x44">
            <summary>
            44x44 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square48x48">
            <summary>
            48x48 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square52x52">
            <summary>
            52x52 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square64x64">
            <summary>
            64x64 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square72x72">
            <summary>
            72x72 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square80x80">
            <summary>
            80x80 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square88x88">
            <summary>
            88x88 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square96x96">
            <summary>
            96x96 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square104x104">
            <summary>
            104x104 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square120x120">
            <summary>
            120x120 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square132x132">
            <summary>
            132x132 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Square144x144">
            <summary>
            144x144 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle8x18">
            <summary>
            8x18 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle8x32">
            <summary>
            8x32 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle12x26">
            <summary>
            12x26 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle12x36">
            <summary>
            12x36 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle16x36">
            <summary>
            16x36 symbol size.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.SymbolSize.Rectangle16x48">
            <summary>
            16x48 symbol size.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.SymbolSizeException">
            <summary>
            The exception thrown related to symbol size.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.SymbolSizeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.SymbolSizeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.SymbolSizeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.SymbolSizeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.SymbolSizeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.SymbolSizeException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.SymbolSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.SymbolSizeException"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.EncodingMode">
            <summary>
            The EncodingMode enumeration determines the type of the acceptable data.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.EncodingMode.Auto">
            <summary>
            Auto mode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.EncodingMode.Byte">
            <summary>
            Accepts byte data.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.EncodingMode.Text">
            <summary>
            Allows text data.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.EncodingMode.Numeric">
            <summary>
            Allows numeric data.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.PDF417.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.PDF417" /> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.PDF417.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.PDF417"/> class.
            </summary>
            <param name="columns">The number of columns of the generated barcode.</param>
            <param name="rows">The number of rows of the generated barcode.</param>
            <param name="errorCorrectionLevel">How much data will be available for error correction.</param>
        </member>
        <member name="P:Telerik.Barcode.Symbology.PDF417.ECLevel">
            <summary>
            Gets or sets how much data will be available for error correction.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.PDF417.Rows">
            <summary>
            Gets or sets the number of rows from the generated barcode.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.PDF417.Columns">
            <summary>
            Gets or sets the number of columns from the generated barcode.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.PDF417.EncodingMode">
            <summary>
            Gets or sets the type of the acceptable data.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.PDF417.DataMatrix">
            <summary>
            Gets the true/false values representing each module in the PDF417 code.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.TextSubMode.Upper">
            <summary>
            Switch to "Uppercase".
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.TextSubMode.Lower">
            <summary>
            Switch to "Lowercase".
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.TextSubMode.Mixed">
            <summary>
            Switch to "Mixed".
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.TextSubMode.Punctuation">
            <summary>
            Switch to "Punctuation" only for next character.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.AlphaNumeric.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.AlphaNumeric"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.KanjiMode">
            <summary>
            Provides methods for encoding and validation of double-byte Kanji characters.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.KanjiMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.KanjiMode"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.KanjiMode.EncodeData(System.String)">
            <summary>
            This method encodes the data for the Kanji Mode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.KanjiMode.ValidateData(System.String)">
            <summary>
            Validates the data,  to ensure no invalid characters are present.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.CodeMode">
            <summary>
            Determines the type of code, such as Numeric, Alphanumeric, Byte or Kanji.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.CodeMode.Byte">
            <summary>
            Byte Mode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.CodeMode.Numeric">
            <summary>
            Allows Numbers [0-9].
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.CodeMode.Alphanumeric">
            <summary>
            Allows characters or numbers.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.CodeMode.Kanji">
            <summary>
            Kanji Mode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.ErrorCorrectionLevel">
            <summary>
            Determines how much data is available for error correction.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ErrorCorrectionLevel.L">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ErrorCorrectionLevel.M">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ErrorCorrectionLevel.Q">
            <summary>
            Quartile.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ErrorCorrectionLevel.H">
            <summary>
            High.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.ECIMode">
            <summary>
            Determines the Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_7">
            <summary>
            ECI 9.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_6">
            <summary>
            ECI 8.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_5">
            <summary>
            ECI 7.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_4">
            <summary>
            ECI 6.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_3">
            <summary>
            ECI 5.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_2">
            <summary>
            ECI 4.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_1En">
            <summary>
            ECI 3.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.CP437">
            <summary>
            ECI 2.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_1">
            <summary>
            ECI 1.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_8">
            <summary>
            ECI 10.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_9">
            <summary>
            ECI 11.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_11">
            <summary>
            ECI 13.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_13">
            <summary>
            ECI 15.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO8859_15">
            <summary>
            ECI 17.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.Windows1250">
            <summary>
            ECI 21.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.Windows1251">
            <summary>
            ECI 22.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.Windows1252">
            <summary>
            ECI 23.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.Windows1256">
            <summary>
            ECI 24.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.UTF8">
            <summary>
            UTF-8.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.ECIMode.ISO646US">
            <summary>
            ECI 27.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Symbology.FNC1Mode">
            <summary>
            Signifies application of special formatting to the code data.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.FNC1Mode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.FNC1Mode.FirstPosition">
            <summary>
            FNC 1 in first position.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.Symbology.FNC1Mode.SecondPosition">
            <summary>
            FNC 1 in second position.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.QRCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.QRCode"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.QRCode.#ctor(Telerik.Barcode.Symbology.CodeMode,System.Int32,Telerik.Barcode.Symbology.ErrorCorrectionLevel,Telerik.Barcode.Symbology.ECIMode,Telerik.Barcode.Symbology.FNC1Mode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Symbology.QRCode"/> class.
            </summary>
            <param name="mode">The type of code that will be used for encoding.</param>
            <param name="version">Determines the size of the QR code and the amount of information that can be encoded.
            Accepted values are in the range [1..40]. If you set the version to a number outside this range, version will be calculated automatically.</param>
            <param name="errorLevel">How much data will be available for error correction.</param>
            <param name="eciMode">Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.</param>
            <param name="fncMode">Application of special formatting to the code data.</param>
            <param name="appIndicator">The application identifier to be encoded in the QR code.</param>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.BinaryMatrix">
            <summary>
            Gets the true/false values representing each module in the QR code.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.FilledValuesMatrix">
            <summary>
            Gets the matrix, reflecting the filled modules/positions in the QR code matrix.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.VersionDimension">
            <summary>
            Gets the size of the QR code based on the current version.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.Version">
            <summary>
            Gets or sets the version of the QR code. The version determines the size of the QR code and the amount of information that can be encoded.
            Accepted values are in the range [1..40]. If you set the version to a number outside this range, version will be calculated automatically.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.CodeMode">
            <summary>
            Gets or sets the type of code that will be used for encoding, such as Numeric, Alphanumeric, Byte or Kanji. 
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.ErrorCorrectionLevel">
            <summary>
            Gets or sets how much data will be available for error correction.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.ECIMode">
            <summary>
            Gets or sets the Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.FNC1Mode">
            <summary>
            Gets or sets application of special formatting to the code data.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.QRCode.ApplicationIndicator">
            <summary>
            Gets or sets the application identifier to be encoded in the QR code.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Symbology.SwissQRCode.GetSwissCrossFlagElements(Telerik.Barcode.Primitives.RadRect)">
            <summary>
            Creates the elements needed to draws the Swiss Cross in the middle of the QRCode.
            </summary>
            <param name="swissFlagBounds">The size of the flag area including the quiet area.</param>
        </member>
        <member name="P:Telerik.Barcode.Symbology.SymbologyBase.SizingMode">
            <summary>
            Gets or sets whether the bars of the barcode should be stretched to fill the space available.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.SymbologyBase.AutoChecksum">
            <summary>
            Gets or sets whether the barcode should calculate a checksum.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.SymbologyBase.Module">
            <summary>
            Gets or sets a module by which the barcode can be scaled up.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Symbology.SymbologyBase.Value">
            <summary>
            Gets the value currently being encoded by the symbology.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.BookmarkQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a bookmark QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.BookmarkQRCodeValueStringBuilder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.BookmarkQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="url">The url this bookmark points to.</param>
            <param name="title">Optional title for the bookmark.</param>
        </member>
        <member name="M:Telerik.Barcode.BookmarkQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.BookmarkQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.MeCardQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a MeCard QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.MeCardQRCodeValueStringBuilder.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.MeCardQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="name">The text string to be set as the name in the phonebook.</param>
            <param name="reading">The text string to be set as the kana name in the phonebook.</param>
            <param name="nickname">The text string to be set as the nickname in the phonebook.</param>
            <param name="birthday">The date to be set as the birthday in the phonebook.</param>
            <param name="memo">The text string to be set as the memo in the phonebook.</param>
            <param name="phoneNumber">The text string to be set as the telephone number in the phonebook.</param>
            <param name="videoPhoneNumber">The text string to be set as the videophone number in the phonebook.</param>
            <param name="email">The text string to be set as the e-mail address in the phonebook.</param>
            <param name="address">The text string to be set as the address in the phonebook.The fields divided by commas (,) denote PO box, room number, house number, city, prefecture, zip code and country, in order.</param>
            <param name="url">The text string to be set as the homepage URL in the phonebook.</param>
        </member>
        <member name="M:Telerik.Barcode.MeCardQRCodeValueStringBuilder.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.MeCardQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="name">The text string to be set as the name in the phonebook.</param>
            <param name="reading">The text string to be set as the kana name in the phonebook.</param>
            <param name="nickname">The text string to be set as the nickname in the phonebook.</param>
            <param name="birthday">The date to be set as the birthday in the phonebook.</param>
            <param name="memo">The text string to be set as the memo in the phonebook.</param>
            <param name="phoneNumbers">A collection of text strings to be set as telephone numbers in the phonebook.</param>
            <param name="videoPhoneNumbers">A collection of text strings to be set as the videophone numbers in the phonebook.</param>
            <param name="emails">A collection of text strings to be set as the e-mail addresses in the phonebook.</param>
            <param name="addresses">A collection of text strings to be set as the addresses in the phonebook.The fields divided by commas (,) denote PO box, room number, house number, city, prefecture, zip code and country, in order.</param>
            <param name="urls">A collection of text strings to be set as the homepage URLs in the phonebook.</param>
        </member>
        <member name="M:Telerik.Barcode.MeCardQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.MeCardQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.IQRCodeValueStringBuilder">
            <summary>
            Represents a value with a specific structure that can be converted into a string to be used to generate a QRCode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.IQRCodeValueStringBuilder.Validate">
            <summary>
            Validates and returns all errors as a new line delimited string.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.IQRCodeValueStringBuilder.BuildValue">
            <summary>
            Builds the string value that will be used for encoding in a barcode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.MailFormat">
            <summary>
            Represents the format of the email to be encoded by a QR code.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.MailFormat.MAILTO">
            <summary>
            MAILTO format.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.MailFormat.MATMSG">
            <summary>
            MATMSG format.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.MailFormat.SMTP">
            <summary>
            SMTP format.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.MailQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a email QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.MailQRCodeValueStringBuilder.#ctor(System.String,System.String,System.String,Telerik.Barcode.MailFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.MailQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="receiver">Receiver's email address.</param>
            <param name="subject">The subject of the email.</param>
            <param name="body">The body of the email.</param>
            <param name="format">The format in which the data will be represented by the QR code.</param>
        </member>
        <member name="M:Telerik.Barcode.MailQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.MailQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.QRCodeValueStringBuilderBase">
            <summary>
            Represents a value with a specific structure that can be converted into a string to be used to generate a QRCode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.QRCodeValueStringBuilderBase.Validate">
            <summary>
            Validates and returns all errors as a new line delimited string.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.QRCodeValueStringBuilderBase.BuildValue">
            <summary>
            Builds the string value that will be used for encoding in a barcode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.AdditionalInformation">
            <summary>
            Additional information can be used for the scheme with message and for the scheme with structured reference.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AdditionalInformation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.AdditionalInformation"/> class.
            </summary>
            <param name="unstructuredMessage">Can be used to indicate the payment purpose or for additional textual information about payments with a structured reference.</param>
            <param name="billInformation">Contains coded information for automated booking of the payment.</param>
        </member>
        <member name="P:Telerik.Barcode.AdditionalInformation.UnstructuredMessage">
            <summary>
            Unstructured information can be used to indicate the payment purpose or for additional textual information about payments with a structured reference.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.AdditionalInformation.BillInformation">
            <summary>
            Bill information contain coded information for automated booking of the payment. The data is not forwarded with the payment.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AdditionalInformation.BuildEmptyValue">
            <summary>
            Builds an empty value.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AdditionalInformation.Validate">
            <summary>
            Validates the instance. The message and bill information combined must contain 140 characters or less.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AdditionalInformation.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Address">
            <summary>
            Represents the base class for an address used with SwissQRCode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Address.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Address"/> class.
            </summary>
            <param name="country">Two-letter country code according to ISO 3166-1.</param>
        </member>
        <member name="P:Telerik.Barcode.Address.Country">
            <summary>
            Gets the country of the address.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Address.Validate">
            <summary>
            Validates and returns all errors as a new line delimited string.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Address.BuildValue">
            <summary>
            Builds the string value that will be used for encoding in a barcode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.AlternativeProcedure">
            <summary>
            Provides alternative schema content for a SwissQRCode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AlternativeProcedure.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.AlternativeProcedure"/> class.
            </summary>
            <param name="alternativeProcedure1">Parameter character chain of the alternative scheme.</param>
            <param name="alternativeProcedure2">Parameter character chain of the alternative scheme.</param>
        </member>
        <member name="P:Telerik.Barcode.AlternativeProcedure.AlternativeProcedure1">
            <summary>
            The first line of the alternative procedure.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.AlternativeProcedure.AlternativeProcedure2">
            <summary>
            The second line of the alternative procedure.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AlternativeProcedure.BuildEmptyValue">
            <summary>
            Builds an empty value.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AlternativeProcedure.Validate">
            <summary>
            Validates the instance. A maximum of 100 characters per line are permitted. 
            </summary>
        </member>
        <member name="M:Telerik.Barcode.AlternativeProcedure.BuildValue(System.Boolean)">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
            <param name="billingInformationIsEmpty">Determines whether the data after the EPD trailer contains billing information field. If not, an additional empty line needs to be added before writing the alternative procedures.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Barcode.CombinedAddress">
            <summary>
            Contains information for the address of a (Ultimate) Creditor or Ultimate Debtor in a combined address schema.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.CombinedAddress.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.CombinedAddress"/> class.
            </summary>	
            <param name="country">Two-letter country code according to ISO 3166-1.</param>
            <param name="addressLine1">Includes street and building number or P.O. Box.</param>
            <param name="addressLine2">Includes postal code and town.</param>
        </member>
        <member name="P:Telerik.Barcode.CombinedAddress.AddressLine1">
            <summary>
            Gets the first line of the address.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.CombinedAddress.AddressLine2">
            <summary>
            Gets the second line of the address.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.CombinedAddress.Validate">
            <summary>
            Validates the instance according to the schema for a combined address.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.CombinedAddress.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Contact">
            <summary>
            Represents the information to identity a (Ultimate) Creditor, Ultimate Debtor.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Contact.#ctor(System.String,Telerik.Barcode.Address)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Contact"/> class.
            </summary>
            <param name="name">The name of the contact.</param>
            <param name="address">The address of the contact. Can be either an instance of <see cref="T:Telerik.Barcode.StructuredAddress"/> or <see cref="T:Telerik.Barcode.CombinedAddress"/></param>
        </member>
        <member name="P:Telerik.Barcode.Contact.Name">
            <summary>
            Gets the name of the contact.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Contact.Address">
            <summary>
            Gets the address of the contact.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Contact.BuildEmptyValue">
            <summary>
            Builds an empty contact value.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Contact.Validate">
            <summary>
            Validates the instance. Name has to be less than 70 characters and address is validated based on the type of address.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Barcode.Contact.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Iban">
            <summary>
            Represents information about an IBAN.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Iban.#ctor(System.String,Telerik.Barcode.IbanType)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Iban"/> class.
            </summary>
            <param name="value">The string representation of the IBAN.</param>
            <param name="type">The type of the IBAN.</param>
        </member>
        <member name="P:Telerik.Barcode.Iban.Value">
            <summary>
            Gets the IBAN string for display purposes.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Iban.StrippedIban">
            <summary>
            Gets the IBAN without any dashes or spaces.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Iban.Type">
            <summary>
            Gets the type of the IBAN.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Iban.Validate">
            <summary>
            Validates a Swiss or Lichtenstein IBAN. 
            Format is: 2 letters ISO country code [CH or LI], 2 digits IBAN check digits, 5 digits Bank and Branch Code, 12 digits Account Number.
            For QR-IBAN the 5 digits after the IBAN check digits should be in the range [30000 - 31999].
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Iban.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.IbanType">
            <summary>
            Represents the types of IBANs that can be encoded in a SwissQRCode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.IbanType.IBAN">
            <summary>
            Standardized representation of a bank account number in accordance with the ISO 13616 standard.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.IbanType.QRIBAN">
            <summary>
            A QR-IBAN corresponds to the rules stipulated in ISO 13616 standard for IBAN and contains a special financial institution identification (QR-IID).
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Reference">
            <summary>
            Represents either a QR reference or an ISO 11649 Creditor Reference for a payment within a SwissQRCode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Reference.#ctor(Telerik.Barcode.ReferenceType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Reference"/> class.
            </summary>
            <param name="type">Must contain the code QRR where a QR-IBAN is used; where the IBAN is used, either the SCOR or NON code can be entered.</param>
            <param name="reference">Either a QR reference or an ISO 11649 Creditor Reference.</param>
        </member>
        <member name="P:Telerik.Barcode.Reference.Type">
            <summary>
            Gets the type of the reference.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.Reference.ReferenceValue">
            <summary>
            Gets the reference value.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Reference.Validate">
            <summary>
            Validates the instance according to the rules for the respective type of reference.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Reference.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.ReferenceType">
            <summary>
            Represents the types of payment reference that can be added to a SwissQRCode.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.ReferenceType.QRR">
            <summary>
            QR reference: 27 characters, numeric, check sum calculation according to Modulo 10 recursive (27th position of the reference).
            </summary>
        </member>
        <member name="F:Telerik.Barcode.ReferenceType.SCOR">
            <summary>
            Creditor Reference (ISO 11649): max 25 characters, alphanumeric.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.ReferenceType.NON">
            <summary>
            No reference value is provided.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.StructuredAddress">
            <summary>
            Contains information for the address of a (Ultimate) Creditor or Ultimate Debtor in a structured address schema.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.StructuredAddress.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.StructuredAddress"/> class.
            </summary>
            <param name="country">Two-letter country code according to ISO 3166-1.</param>
            <param name="zipCode">Maximum 16 characters permitted. Must be provided without a country code prefix.</param>
            <param name="city">Maximum 35 characters permitted.</param>
            <param name="street">Street. Maximum 70 characters permitted.</param>
            <param name="houseNumber">Building number. Maximum 16 characters permitted.</param>
        </member>
        <member name="P:Telerik.Barcode.StructuredAddress.ZipCode">
            <summary>
            Gets the P.O. number.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.StructuredAddress.City">
            <summary>
            Gets the name of the city.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.StructuredAddress.Street">
            <summary>
            Gets the name of the street.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.StructuredAddress.HouseNumber">
            <summary>
            Gets the house number.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.StructuredAddress.Validate">
            <summary>
            Validates the instance according to the schema for a structured address.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.StructuredAddress.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.SwissQRCodeCurrency">
            <summary>
            Represents the currencies allowed to be used for payment information in a SwissQRCode. Three character codes according to ISO 4217.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.SwissQRCodeCurrency.CHF">
            <summary>
            Swiss franc.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.SwissQRCodeCurrency.EUR">
            <summary>
            Euro.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.SwissQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a SwissQRCode to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.SwissQRCodeValueStringBuilder.#ctor(Telerik.Barcode.Iban,Telerik.Barcode.SwissQRCodeCurrency,Telerik.Barcode.Contact,Telerik.Barcode.Reference,Telerik.Barcode.AdditionalInformation,Telerik.Barcode.Contact,System.Nullable{System.Decimal},Telerik.Barcode.AlternativeProcedure)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.SwissQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="iban">The IBAN of the Account/Payable to.</param>
            <param name="currency">The currency of the payment.</param>
            <param name="creditor">Information of the contact that receives the payment.</param>
            <param name="reference">Reference information for the payment.</param>
            <param name="additionalInformation">Optional additional information for the payment.</param>
            <param name="debtor">Optional information of the contact that makes the payment.</param>
            <param name="amount">Optional amount of the payment.</param>
            <param name="alternativeProcedure">Optional alternative procedures for the payment.</param>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Iban">
            <summary>
            Gets the IBAN of the Account/Payable to.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Currency">
            <summary>
            Gets the currency of the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Creditor">
            <summary>
            Gets the information of the contact that receives the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Reference">
            <summary>
            Gets the reference information for the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.AdditionalInformation">
            <summary>
            Gets the additional information for the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Debtor">
            <summary>
            Gets the information of the contact that makes the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.Amount">
            <summary>
            Gets the amount of the payment.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.SwissQRCodeValueStringBuilder.AlternativeProcedure">
            <summary>
            Gets the alternative procedures for the payment.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.SwissQRCodeValueStringBuilder.Validate">
            <summary>
            Validates the instance. Validates all fields and relations between them.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.SwissQRCodeValueStringBuilder.BuildValue">
            <summary>
            Builds the string value to be provided to the RadBarcode when encoding a SwissQRCode.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.TelephoneQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a telephone QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.TelephoneQRCodeValueStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.TelephoneQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="number">The telephone number.</param>
        </member>
        <member name="M:Telerik.Barcode.TelephoneQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.TelephoneQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.TextMessageQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a text message QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.TextMessageQRCodeValueStringBuilder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.TextMessageQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="number">The number of the receiver.</param>
            <param name="body">Optional body of the message.</param>
        </member>
        <member name="M:Telerik.Barcode.TextMessageQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.TextMessageQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.WiFiAuthentication">
            <summary>
            Represents different authentication protocols for WiFi.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.WiFiAuthentication.WEP">
            <summary>
            Wired Equivalent Privacy.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.WiFiAuthentication.WPA">
            <summary>
            Wi-Fi Protected Access.
            </summary>
        </member>
        <member name="F:Telerik.Barcode.WiFiAuthentication.nopass">
            <summary>
            No password.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.WiFiInput">
            <summary>
            Represents a input field for a WiFi value.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.WiFiInput.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.WiFiInput"/> class.
            </summary>
            <param name="value">The value this instance holds.</param>
            <param name="isHex">True if the value is in Hexadecimal format, otherwise false.</param>
        </member>
        <member name="P:Telerik.Barcode.WiFiInput.Value">
            <summary>
            Gets the value of this input instance.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.WiFiInput.IsHex">
            <summary>
            Gets a value indicating whether the <see cref="P:Telerik.Barcode.WiFiInput.Value"/> property holds information in a Hexadecimal format.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.WiFiInput.EscapedValue">
            <summary>
            Gets the value with all special symbols escaped.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.WiFiQRCodeValueStringBuilder">
            <summary>
            Holds the information needed for a WiFi QR code to be validated and generated.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.WiFiQRCodeValueStringBuilder.#ctor(Telerik.Barcode.WiFiInput,Telerik.Barcode.WiFiInput,Telerik.Barcode.WiFiAuthentication,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.WiFiQRCodeValueStringBuilder"/> class.
            </summary>
            <param name="ssid">SSID (Service Set Identifier) of the WiFi network.</param>
            <param name="password">Password of the WiFi network.</param>
            <param name="authentication">Authentication mode (WEP, WPA/WPA2, None).</param>
            <param name="hidden">Set flag, if the WiFi network hides its SSID.</param>
        </member>
        <member name="P:Telerik.Barcode.WiFiQRCodeValueStringBuilder.Ssid">
            <summary>
            Gets the SSID.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.WiFiQRCodeValueStringBuilder.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.WiFiQRCodeValueStringBuilder.Authentication">
            <summary>
            Gets the authentication protocol.
            </summary>
        </member>
        <member name="P:Telerik.Barcode.WiFiQRCodeValueStringBuilder.Hidden">
            <summary>
            Gets a value indicating whether the network is hidden.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.WiFiQRCodeValueStringBuilder.Validate">
            <inheritdoc/>
        </member>
        <member name="M:Telerik.Barcode.WiFiQRCodeValueStringBuilder.BuildValue">
            <inheritdoc/>
        </member>
        <member name="T:Telerik.Barcode.Validation.InvalidLengthException">
            <summary>
            The exception that is thrown when an invalid symbol is detected in the input of a RadBarcode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidLengthException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidLengthException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidLengthException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidLengthException"/> class.
            </summary>
            <param name="length">The maximum length that was exceeded.</param>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidLengthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidLengthException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidLengthException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidLengthException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidLengthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidLengthException"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Validation.InvalidSymbolException">
            <summary>
            The exception that is thrown when an invalid symbol is detected in the input of a RadBarcode.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidSymbolException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidSymbolException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidSymbolException.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidSymbolException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidSymbolException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidSymbolException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidSymbolException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.InvalidSymbolException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.InvalidSymbolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Initializes a new instance of the InvalidSymbolException class with serialized data.
            </summary>
        </member>
        <member name="T:Telerik.Barcode.Validation.ValidateException">
            <summary>
            Provides a base class for RadBarcode validation exceptions.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.ValidateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.ValidateException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.ValidateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.ValidateException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.ValidateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Barcode.Validation.ValidateException"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Barcode.Validation.ValidateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Initializes a new instance of the ValidateException class with serialized data.
            </summary>
        </member>
    </members>
</doc>
