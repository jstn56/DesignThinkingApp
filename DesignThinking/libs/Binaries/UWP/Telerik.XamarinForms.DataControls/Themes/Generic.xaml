<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Telerik.XamarinForms.DataControlsRenderer.UWP"
    xmlns:nativeListView="using:Telerik.UI.Xaml.Controls.Data.ListView"
    xmlns:nativeListViewPrimitives="using:Telerik.UI.Xaml.Controls.Data.ListView.Primitives"
    xmlns:nativeLoopingList="using:Telerik.UI.Xaml.Controls.Primitives.LoopingList"
    xmlns:xf="using:Xamarin.Forms.Platform.UWP"
    xmlns:theming="using:Telerik.UI.Xaml.Controls">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <theming:UserThemeResources x:Key="ResourceLoaderInitializer"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Telerik.UI.Xaml.Controls.Data.UWP/Themes/ThemeResourcesDark.xaml"/>
                <ResourceDictionary Source="{CustomResource DarkResourcesPath}"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <theming:UserThemeResources x:Key="ResourceLoaderInitializer"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Telerik.UI.Xaml.Controls.Data.UWP/Themes/ThemeResourcesLight.xaml"/>
                <ResourceDictionary Source="{CustomResource LightResourcesPath}"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <nativeListView:OrientationToHorizontalAlignmentConverter x:Key="OrientationToHorizontalAlignmentConverter" />
    <nativeListView:OrientationToVerticalAlignmentConverter x:Key="OrientationToVerticalAlignmentConverter" />
    <nativeListView:OrientationToRotateDegreesConverter x:Key="OrientationToRotateDegreesConverter" />
    <nativeListView:OrientationToSizeConverter x:Key="OrientationToSizeConverter" />
    <nativeListView:OrientationToScrollModeConverter x:Key="OrientationToScrollModeConverter"/>

    <xf:CollapseWhenEmptyConverter x:Key="CollapseWhenEmptyConverter" />
    <xf:ColorConverter x:Key="ColorConverter" />
    <xf:ImageConverter x:Key="ImageConverter"/>
    <xf:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <xf:BoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" FalseIsVisible="True" />

    <DataTemplate x:Key="ListViewTextCellTemplate">
        <StackPanel Margin="3">
            <TextBlock Text="{Binding Text}" 
                       Style="{ThemeResource TitleTextBlockStyle}"
                       Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource CollapseWhenEmptyConverter}}"
                       Foreground="{Binding TextColor, Converter={StaticResource ColorConverter}, ConverterParameter=DefaultTextForegroundThemeBrush}" />
            <TextBlock Text="{Binding Detail}"
                       Style="{ThemeResource BodyTextBlockStyle}"
                       Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource CollapseWhenEmptyConverter}}"
                       Foreground="{Binding DetailColor, Converter={StaticResource ColorConverter}, ConverterParameter=DefaultTextForegroundThemeBrush}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ListViewImageCellTemplate">
        <Grid Margin="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image VerticalAlignment="Center"
                   DataContext="{Binding ImageSource, Converter={StaticResource ImageConverter}}"
                   Source="{Binding Value}" />

            <StackPanel Margin="5,0,0,0" Grid.Column="1">
                <TextBlock Text="{Binding Text}"
                       Style="{ThemeResource TitleTextBlockStyle}"
                       Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource CollapseWhenEmptyConverter}}"
                       Foreground="{Binding TextColor, Converter={StaticResource ColorConverter}, ConverterParameter=DefaultTextForegroundThemeBrush}" />
                <TextBlock Text="{Binding Detail}"
                       Style="{ThemeResource BodyTextBlockStyle}"
                       Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource CollapseWhenEmptyConverter}}"
                       Foreground="{Binding DetailColor, Converter={StaticResource ColorConverter}, ConverterParameter=DefaultTextForegroundThemeBrush}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListViewGroupHeaderTemplate">
        <Grid Padding="10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0"
                       Text="&#x25B8;"
                       Visibility="{Binding IsExpanded, Converter={StaticResource InvertedBoolToVisibilityConverter}}" />
            <TextBlock Grid.Column="0"
                       Text="&#x25BE;"
                       Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}}" />
            <TextBlock Grid.Column="1"
                       Text="{Binding Key}"
                       Padding="10,0,0,0"
                       Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource CollapseWhenEmptyConverter}}" />
        </Grid>
    </DataTemplate>

    <Style TargetType="local:ExtendedGroupHeader" BasedOn="{StaticResource DefaultExtendedGroupHeaderStyle}"/>

    <Style x:Key="DefaultExtendedGroupHeaderStyle" TargetType="local:ExtendedGroupHeader" >
        <Setter Property="Background" Value="{ThemeResource TelerikHighlightBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="ContentTemplate" Value="{StaticResource ListViewGroupHeaderTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ExtendedGroupHeader">
                    <Border  Background="{TemplateBinding Background}" 
                                 Padding="{TemplateBinding Margin}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:UWPListView">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="False" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="100"/>
        <Setter Property="GroupHeaderStyle" Value="{StaticResource DefaultExtendedGroupHeaderStyle}"/>
        <Setter Property="ItemStyle" Value="{StaticResource DefaultExtendedListViewItemStyle}"/>
        <Setter Property="LayoutDefinition">
            <Setter.Value>
                <nativeListView:StackLayoutDefinition/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:UWPListView">
                    <Border x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <nativeListView:ListViewRootPanel x:Name="PART_ListViewRootPanel">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          VerticalAlignment="Top" 
                                          HorizontalAlignment="Left"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          TabNavigation="{TemplateBinding TabNavigation}"
                                          BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                          HorizontalScrollMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Orientation, Converter={StaticResource OrientationToScrollModeConverter}, ConverterParameter=Horizontal}"
                                          VerticalScrollMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Orientation, Converter={StaticResource OrientationToScrollModeConverter}, ConverterParameter=Vertical}">
                                <ScrollViewer.TopLeftHeader>
                                    <nativeListViewPrimitives:FrozenGroupsPanel x:Name="PART_FrozenGroupHeadersHost" />
                                </ScrollViewer.TopLeftHeader>
                                <Grid x:Name="PART_RootScrollablePanel" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <nativeListView:ListViewPanel x:Name="PART_ScrollableContent" Background="Transparent">
                                        <Canvas x:Name="PART_AnimatingChildrenPanel" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <nativeListView:ChildrenListViewPanel x:Name="PART_ChildrenPanel" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent">
                                                <nativeListView:PullToRefreshIndicator Canvas.ZIndex="1000" x:Name="PART_PullToRefreshIndicator" IsTabStop="False"/>
                                                <ContentControl x:Name="PART_SwipeActionContent"
                                                                VerticalContentAlignment="Stretch"
                                                                HorizontalContentAlignment="Stretch"
                                                                Content="{TemplateBinding SwipeActionContent}" 
                                                                Canvas.ZIndex="5" Margin="5" 
                                                                Padding="5" />
                                            </nativeListView:ChildrenListViewPanel>
                                        </Canvas>
                                    </nativeListView:ListViewPanel>
                                    <Canvas x:Name="PART_ScrollableAdornerHost"/>
                                </Grid>
                            </ScrollViewer>
                            <Canvas x:Name="PART_AdornerHost" IsHitTestVisible="False"/>
                        </nativeListView:ListViewRootPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ExtendedListViewItem" BasedOn="{StaticResource DefaultExtendedListViewItemStyle}"/>

    <Style x:Key="DefaultExtendedListViewItemStyle" TargetType="local:ExtendedListViewItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Canvas.ZIndex" Value="10" />
        <Setter Property="SelectedBorderBrush" Value="{ThemeResource TelerikSelectedBrush}" />
        <Setter Property="SelectedBorderThickness" Value="3" />
        <Setter Property="PressedBorderThickness" Value="0" />
        <Setter Property="ReorderBorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ExtendedListViewItem">
                    <Border Background="{TemplateBinding Background}"  Padding="{TemplateBinding Margin}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DisabledStateOpacity, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedState">
                                <VisualState x:Name="Reorder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderReorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderPressed" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderPressed" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderPressed" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderState">
                                <VisualState x:Name="ReorderEnabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ReorderHandle" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReorderDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ReorderHandle" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="border"
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{x:Null}" />
                            <Border x:Name="borderSelected" Grid.ColumnSpan="2" Visibility="Collapsed" 
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    BorderBrush="{TemplateBinding SelectedBorderBrush}"
                                    BorderThickness="{TemplateBinding SelectedBorderThickness}"
                                    Background="{TemplateBinding SelectedBackground}" />
                            <Border x:Name="borderPressed" Grid.ColumnSpan="2" Visibility="Collapsed" 
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    BorderBrush="{TemplateBinding PressedBorderBrush}" 
                                    Background="{TemplateBinding PressedBackground}"
                                    BorderThickness="{TemplateBinding PressedBorderThickness}"/>
                            <Border x:Name="borderReorder" Grid.ColumnSpan="2" Visibility="Collapsed" 
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Stretch" 
                                    HorizontalAlignment="Stretch" 
                                    BorderBrush="{TemplateBinding ReorderBorderBrush}" 
                                    Background="{TemplateBinding ReorderBackground}"
                                    BorderThickness="{TemplateBinding ReorderBorderThickness}"/>
                            <ContentPresenter FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Border Background="Transparent" 
                                    HorizontalAlignment="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, 
                                    Converter={StaticResource OrientationToHorizontalAlignmentConverter}, 
                                    ConverterParameter=First}"
                                    VerticalAlignment="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, 
                                    Converter={StaticResource OrientationToVerticalAlignmentConverter}, 
                                    ConverterParameter=First}"
                                    Height="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource OrientationToSizeConverter},
                                    ConverterParameter=Height}" 
                                    Width="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource OrientationToSizeConverter},
                                    ConverterParameter=Width}" 
                                    x:Name="PART_FirstHandle"/>
                            <Border Background="Transparent" 
                                    HorizontalAlignment="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, 
                                    Converter={StaticResource OrientationToHorizontalAlignmentConverter}, 
                                    ConverterParameter=Second}"
                                    VerticalAlignment="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}, 
                                    Converter={StaticResource OrientationToVerticalAlignmentConverter}, 
                                    ConverterParameter=Second}"
                                    Height="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource OrientationToSizeConverter},
                                    ConverterParameter=Height}" 
                                    Width="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource OrientationToSizeConverter},
                                    ConverterParameter=Width}" 
                                    x:Name="PART_SecondHandle" />
                            <BitmapIcon  x:Name="PART_ReorderHandle" UriSource="{Binding HandleIconPath, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                         ManipulationMode="None" Width="48" Height="48"  HorizontalAlignment="Right" VerticalAlignment="Center">
                                <BitmapIcon.RenderTransform>
                                    <RotateTransform CenterX="0.5" CenterY="0.5"
                                                     Angle="{Binding Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OrientationToRotateDegreesConverter}}" />
                                </BitmapIcon.RenderTransform>
                            </BitmapIcon>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="nativeListViewPrimitives:ListViewCurrencyControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="nativeListViewPrimitives:ListViewCurrencyControl">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewItemStyle" TargetType="local:TreeViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TreeViewItem">
                    <Grid>
                        <ContentPresenter FontSize="{TemplateBinding FontSize}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}" 
                                          BorderThickness="{TemplateBinding BorderThickness}" 
                                          Content="{TemplateBinding FormsViewContainer}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TreeViewItem" BasedOn="{StaticResource DefaultTreeViewItemStyle}"/>

    <Style TargetType="local:TreeView">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="IsSwipeEnabled" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItemStyle}"/>
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                    <ContentThemeTransition />
                    <ReorderThemeTransition />
                    <EntranceThemeTransition IsStaggeringEnabled="False" />
                </TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TreeView">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer"
                                      TabNavigation="{TemplateBinding TabNavigation}"
                                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                      ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                      AutomationProperties.AccessibilityView="Raw">
                            <ItemsPresenter Header="{TemplateBinding Header}"
                                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                            HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                            Footer="{TemplateBinding Footer}"
                                            FooterTemplate="{TemplateBinding FooterTemplate}"
                                            FooterTransitions="{TemplateBinding FooterTransitions}"
                                            Padding="{TemplateBinding Padding}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ItemsViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ItemsViewItem">
                    <ContentControl Background="{TemplateBinding Background}"
                                        FontSize="{TemplateBinding FontSize}" 
                                        Foreground="{TemplateBinding Foreground}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Content="{TemplateBinding ChildView}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

